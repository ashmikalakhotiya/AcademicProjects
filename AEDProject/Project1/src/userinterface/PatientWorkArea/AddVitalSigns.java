/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PatientWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.LabOrganization;
import Business.Organization.Organization;
import Business.Organization.PatientOrganization;
import Business.Patient.Patient;
import Business.Patient.VitalSignSensor;
import Business.UserAccount.UserAccount;
import Business.Utils.DataUtil;
import Business.WorkQueue2.WorkRequest2;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JPanel;

/**
 *
 * @author CUTIE
 */
public class AddVitalSigns extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private PatientOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private VitalSignSensor vs;
    private EcoSystem business;
    Date datetemp = new Date();

    /**
     * Creates new form AddVitalSigns
     */
    public AddVitalSigns(JPanel userProcessContainer, UserAccount account, PatientOrganization organization, Enterprise enterprise, EcoSystem business, VitalSignSensor vs) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.business = business;
        this.vs = vs;
        showVitalSign();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        textRR = new javax.swing.JTextField();
        textHR = new javax.swing.JTextField();
        textBP = new javax.swing.JTextField();
        textWeight = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        textTimeStamp = new javax.swing.JTextField();
        lblRR = new javax.swing.JLabel();
        lblHR = new javax.swing.JLabel();
        lblBP = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("VIEW CURRENT VITAL SIGNS");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Respiratory Rate");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Heart Rate");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Blood Pressure");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Weight");

        textRR.setEditable(false);

        textHR.setEditable(false);

        textBP.setEditable(false);

        textWeight.setEditable(false);

        btnBack.setBackground(new java.awt.Color(102, 102, 255));
        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("TimeStamp");

        textTimeStamp.setEditable(false);

        lblRR.setText("<RR>");

        lblHR.setText("<HR>");

        lblBP.setText("<BP>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(139, 139, 139)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel6)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(108, 108, 108)
                                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textWeight)
                            .addComponent(textBP, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textHR, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textRR, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(textTimeStamp))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRR)
                            .addComponent(lblHR)
                            .addComponent(lblBP)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textRR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRR))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textHR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHR))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textBP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBP))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(textTimeStamp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(87, 87, 87)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblBP;
    private javax.swing.JLabel lblHR;
    private javax.swing.JLabel lblRR;
    private javax.swing.JTextField textBP;
    private javax.swing.JTextField textHR;
    private javax.swing.JTextField textRR;
    private javax.swing.JTextField textTimeStamp;
    private javax.swing.JTextField textWeight;
    // End of variables declaration//GEN-END:variables

    private void showVitalSign() {
        Patient pat = userAccount.getPatient();
        int patientAge = pat.getAge();
        int randomRR = vs.getRespiratoryRate();
        int randomHR = vs.getHeartRate();
        int randomBP = vs.getBloodPressure();

        if (patientAge >= 1 && patientAge <= 3) {
            textRR.setText(String.valueOf(randomRR));
            textBP.setText(String.valueOf(randomBP));
            textHR.setText(String.valueOf(randomHR));

            if (randomRR < 20 || randomRR > 30) {
                lblRR.setText("Abnormal");
            } else {
                lblRR.setText("Normal");
            }

            if (randomHR < 80 || randomHR > 130) {
                lblHR.setText("Abnormal");
            } else {
                lblHR.setText("Normal");
            }

            if (randomBP < 80 || randomBP > 110) {
                lblBP.setText("Abnormal");
            } else {
                lblBP.setText("Normal");
            }
        } else if (patientAge >= 4 && patientAge <= 5) {
            textRR.setText(String.valueOf(randomRR));
            textBP.setText(String.valueOf(randomBP));
            textHR.setText(String.valueOf(randomHR));

            if (randomRR < 20 || randomRR > 30) {
                lblRR.setText("Abnormal");
            } else {
                lblRR.setText("Normal");
            }

            if (randomHR < 80 || randomHR > 120) {
                lblHR.setText("Abnormal");
            } else {
                lblHR.setText("Normal");
            }

            if (randomBP < 80 || randomBP > 110) {
                lblBP.setText("Abnormal");
            } else {
                lblBP.setText("Normal");
            }

        } else if (patientAge >= 6 && patientAge <= 12) {
            textRR.setText(String.valueOf(randomRR));
            textBP.setText(String.valueOf(randomBP));
            textHR.setText(String.valueOf(randomHR));

            if (randomRR < 20 || randomRR > 30) {
                lblRR.setText("Abnormal");
            } else {
                lblRR.setText("Normal");
            }

            if (randomHR < 70 || randomHR > 110) {
                lblHR.setText("Abnormal");
            } else {
                lblHR.setText("Normal");
            }

            if (randomBP < 110 || randomBP > 120) {
                lblBP.setText("Abnormal");
            } else {
                lblBP.setText("Normal");
            }

        } else {
            textRR.setText(String.valueOf(randomRR));
            textBP.setText(String.valueOf(randomBP));
            textHR.setText(String.valueOf(randomHR));

            if (randomRR < 12 || randomRR > 20) {
                lblRR.setText("Abnormal");
            } else {
                lblRR.setText("Normal");
            }

            if (randomHR < 55 || randomHR > 105) {
                lblHR.setText("Abnormal");
            } else {
                lblHR.setText("Normal");
            }

            if (randomBP < 110 || randomBP > 120) {
                lblBP.setText("Abnormal");
            } else {
                lblBP.setText("Normal");
            }

        }
        textWeight.setText(String.valueOf(pat.getWeight()));
        textTimeStamp.setText(String.valueOf(datetemp));
    }

}
