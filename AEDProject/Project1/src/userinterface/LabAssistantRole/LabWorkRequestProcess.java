/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.LabAssistantRole;

import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import Business.Utils.MyStringVerifier;
import Business.WorkQueue2.WorkRequest2;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.InputVerifier;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author CUTIE
 */
public class LabWorkRequestProcess extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private WorkRequest2 request;
    private UserAccount patient;

    /**
     * Creates new form LabWorkRequestProcess
     */
    public LabWorkRequestProcess(JPanel userProcessContainer, WorkRequest2 request, UserAccount patient) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = request;
        this.patient = patient;

        Patient pat = patient.getPatient();
        int patientAge = pat.getAge();
        int randomRR = request.getVs().getRespiratoryRate();
        int randomHR = request.getVs().getHeartRate();
        int randomBP = request.getVs().getBloodPressure();

        if (patientAge >= 1 && patientAge <= 3) {
            textRR.setText(String.valueOf(randomRR));
            textBP.setText(String.valueOf(randomBP));
            textHR.setText(String.valueOf(randomHR));

            if (randomRR < 20 || randomRR > 30) {
                lblRR.setText("Abnormal");
            } else {
                lblRR.setText("Normal");
            }

            if (randomHR < 80 || randomHR > 130) {
                lblHR.setText("Abnormal");
            } else {
                lblHR.setText("Normal");
            }

            if (randomBP < 80 || randomBP > 110) {
                lblBP.setText("Abnormal");
            } else {
                lblBP.setText("Normal");
            }
        } else if (patientAge >= 4 && patientAge <= 5) {
            textRR.setText(String.valueOf(randomRR));
            textBP.setText(String.valueOf(randomBP));
            textHR.setText(String.valueOf(randomHR));

            if (randomRR < 20 || randomRR > 30) {
                lblRR.setText("Abnormal");
            } else {
                lblRR.setText("Normal");
            }

            if (randomHR < 80 || randomHR > 120) {
                lblHR.setText("Abnormal");
            } else {
                lblHR.setText("Normal");
            }

            if (randomBP < 80 || randomBP > 110) {
                lblBP.setText("Abnormal");
            } else {
                lblBP.setText("Normal");
            }

        } else if (patientAge >= 6 && patientAge <= 12) {
            textRR.setText(String.valueOf(randomRR));
            textBP.setText(String.valueOf(randomBP));
            textHR.setText(String.valueOf(randomHR));

            if (randomRR < 20 || randomRR > 30) {
                lblRR.setText("Abnormal");
            } else {
                lblRR.setText("Normal");
            }

            if (randomHR < 70 || randomHR > 110) {
                lblHR.setText("Abnormal");
            } else {
                lblHR.setText("Normal");
            }

            if (randomBP < 110 || randomBP > 120) {
                lblBP.setText("Abnormal");
            } else {
                lblBP.setText("Normal");
            }

        } else {
            textRR.setText(String.valueOf(randomRR));
            textBP.setText(String.valueOf(randomBP));
            textHR.setText(String.valueOf(randomHR));

            if (randomRR < 12 || randomRR > 20) {
                lblRR.setText("Abnormal");
            } else {
                lblRR.setText("Normal");
            }

            if (randomHR < 55 || randomHR > 105) {
                lblHR.setText("Abnormal");
            } else {
                lblHR.setText("Normal");
            }

            if (randomBP < 110 || randomBP > 120) {
                lblBP.setText("Abnormal");
            } else {
                lblBP.setText("Normal");
            }

        }

        textWeight.setText(String.valueOf(request.getPatient().getWeight()));
        textTimeStamp.setText(String.valueOf(request.getVs().getTimestamp()));
        addVerifiers();
    }

    private void addVerifiers() {
        InputVerifier stringVerifier = new MyStringVerifier();
        textResult.setInputVerifier(stringVerifier);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textHR = new javax.swing.JTextField();
        textBP = new javax.swing.JTextField();
        textWeight = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        textTimeStamp = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        textRR = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        textResult = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        lblRR = new javax.swing.JLabel();
        lblHR = new javax.swing.JLabel();
        lblBP = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        textHR.setEditable(false);

        textBP.setEditable(false);

        textWeight.setEditable(false);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("TimeStamp");

        textTimeStamp.setEditable(false);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Respiratory Rate");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Heart Rate");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Blood Pressure");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Weight");

        textRR.setEditable(false);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Result");

        jButton1.setBackground(new java.awt.Color(102, 102, 255));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Submit Result");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(102, 102, 255));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("<< Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("PROCESS REQUEST");

        lblRR.setText("<>");

        lblHR.setText("<>");

        lblBP.setText("<>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(37, 37, 37)
                                .addComponent(textRR, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(71, 71, 71)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblHR)
                                    .addComponent(lblRR)
                                    .addComponent(lblBP)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton1)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(17, 17, 17))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(textTimeStamp, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(textResult, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(textWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(textBP, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(textHR, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(418, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textRR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRR))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHR)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(textHR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(textBP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBP))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textTimeStamp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(85, 85, 85))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        LabAssistantWorkAreaJPanel lawap = (LabAssistantWorkAreaJPanel) component;
        lawap.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (checkBlankInput()) {
            request.setMessage(textResult.getText());
            request.setStatus("Completed");

            JOptionPane.showMessageDialog(this, "Sent Successfully", "Update", JOptionPane.INFORMATION_MESSAGE);
            textResult.setEditable(false);
        } else {
            JOptionPane.showMessageDialog(this, "Please Enter the Mandatory Fields", "Error", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    private Boolean checkBlankInput() {
        if (textResult.getText().length() == 0) {
            return false;
        } else {
            return true;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lblBP;
    private javax.swing.JLabel lblHR;
    private javax.swing.JLabel lblRR;
    private javax.swing.JTextField textBP;
    private javax.swing.JTextField textHR;
    private javax.swing.JTextField textRR;
    private javax.swing.JTextField textResult;
    private javax.swing.JTextField textTimeStamp;
    private javax.swing.JTextField textWeight;
    // End of variables declaration//GEN-END:variables
}
